p1 = "шалаш"
p2 = "город дорог"
p3 = "level"
p4 = "not a real palindrome"

#Вот что происходит:

#p1[::-1] — это способ взять строку p1 и развернуть её, создавая новую строку, которая читается в обратном порядке.
#p1 == p1[::-1] — это условие сравнивает оригинальную строку p1 с её перевернутой версией.
#Если они равны, значит, строка p1 является палиндромом (то есть она читается одинаково в обоих направлениях), и результат этого сравнения будет True. Если нет — False.

palindrome1 = p1 == p1[::-1]
palindrome2 = p2 == p2[::-1]
palindrome3 = p3 == p3[::-1]
palindrome4 = p4 == p4[::-1]

print(palindrome1)
print(palindrome2)
print(palindrome3)
print(palindrome4)




# Получаем ввод от пользователя
user_input = input("Введите слово: ")
#Приводим стороку к нижнему регистру
user_input = user_input.lower()
#Проверяем является ли строка палиндромом
if user_input == user_input[::-1]:
    print("это палиндром!")
else:
    print('Это не палиндром!')
#Объяснение:

# 1. Получаем слово от пользователя с помощью input().
#2. Приводим строку к нижнему регистру, чтобы сравнение было нечувствительно к заглавным буквам (lower()).
#3. Проверяем, совпадает ли строка с её перевёрнутой версией, используя срез [::-1], который разворачивает строку.
#4. Если строка и её перевёрнутая версия одинаковы, выводим сообщение, что это палиндром. В противном случае — что это не палиндром.

#Это самый простой способ, который должен легко вписаться в урок. Такой код работает для слов, но не для фраз с пробелами или знаками препинания.
